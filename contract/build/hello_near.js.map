{"version":3,"file":"hello_near.js","sources":["../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-contract.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-map.js","../src/models.ts","../src/contract.ts"],"sourcesContent":["export function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen(target) {\n    return class extends target {\n        static _init() {\n            // @ts-ignore\n            let args = target.deserializeArgs();\n            let ret = new target(args);\n            // @ts-ignore\n            ret.init();\n            // @ts-ignore\n            ret.serialize();\n            return ret;\n        }\n        static _get() {\n            let ret = Object.create(target.prototype);\n            return ret;\n        }\n    };\n}\n","const U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\nexport function panic(msg) {\n    if (msg !== undefined) {\n        env.panic(msg);\n    }\n    else {\n        env.panic();\n    }\n}\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function jsvmAccountId() {\n    env.jsvm_account_id(0);\n    return env.read_register(0);\n}\nexport function jsvmJsContractName() {\n    env.jsvm_js_contract_name(0);\n    return env.read_register(0);\n}\nexport function jsvmMethodName() {\n    env.jsvm_method_name(0);\n    return env.read_register(0);\n}\nexport function jsvmArgs() {\n    env.jsvm_args(0);\n    return env.read_register(0);\n}\nexport function jsvmStorageWrite(key, value) {\n    let exist = env.jsvm_storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageRead(key) {\n    let exist = env.jsvm_storage_read(key, 0);\n    if (exist === 1n) {\n        return env.read_register(0);\n    }\n    return null;\n}\nexport function jsvmStorageRemove(key) {\n    let exist = env.jsvm_storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageHasKey(key) {\n    let exist = env.jsvm_storage_has_key(key);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmCallRaw(contractName, method, args) {\n    env.jsvm_call(contractName, method, JSON.stringify(args), 0);\n    return env.read_register(0);\n}\nexport function jsvmCall(contractName, method, args) {\n    let ret = jsvmCallRaw(contractName, method, args);\n    if (ret === null) {\n        return ret;\n    }\n    return JSON.parse(ret);\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function jsvmValueReturn(value) {\n    env.jsvm_value_return(value);\n}\n// Standalone only APIs\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        panic(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport class NearContract {\n    deserialize() {\n        const rawState = near.storageRead(\"STATE\");\n        if (rawState) {\n            const state = JSON.parse(rawState);\n            // reconstruction of the contract class object from plain object\n            let c = this.default();\n            Object.assign(this, state);\n            for (const item in c) {\n                if (c[item].constructor?.deserialize !== undefined) {\n                    this[item] = c[item].constructor.deserialize(this[item]);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Contract state is empty\");\n        }\n    }\n    serialize() {\n        near.storageWrite(\"STATE\", JSON.stringify(this));\n    }\n    static deserializeArgs() {\n        let args = near.input();\n        return JSON.parse(args || \"{}\");\n    }\n    static serializeReturn(ret) {\n        return JSON.stringify(ret);\n    }\n    init() { }\n}\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    len() {\n        return this.length;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.len()) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector, VectorIterator } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport class UnorderedMap {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n        this.keyIndexPrefix = prefix + \"i\";\n        let indexKey = prefix + \"k\";\n        let indexValue = prefix + \"v\";\n        this.keys = new Vector(indexKey);\n        this.values = new Vector(indexValue);\n    }\n    len() {\n        let keysLen = this.keys.len();\n        let valuesLen = this.values.len();\n        if (keysLen != valuesLen) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysLen;\n    }\n    isEmpty() {\n        let keysIsEmpty = this.keys.isEmpty();\n        let valuesIsEmpty = this.values.isEmpty();\n        if (keysIsEmpty != valuesIsEmpty) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysIsEmpty;\n    }\n    serializeIndex(index) {\n        let data = new Uint32Array([index]);\n        let array = new Uint8Array(data.buffer);\n        return u8ArrayToBytes(array);\n    }\n    deserializeIndex(rawIndex) {\n        let array = bytesToU8Array(rawIndex);\n        let data = new Uint32Array(array.buffer);\n        return data[0];\n    }\n    getIndexRaw(key) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        return indexRaw;\n    }\n    get(key) {\n        let indexRaw = this.getIndexRaw(key);\n        if (indexRaw) {\n            let index = this.deserializeIndex(indexRaw);\n            let value = this.values.get(index);\n            if (value) {\n                return value;\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n        return null;\n    }\n    set(key, value) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            let index = this.deserializeIndex(indexRaw);\n            return this.values.replace(index, value);\n        }\n        else {\n            let nextIndex = this.len();\n            let nextIndexRaw = this.serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.keys.push(key);\n            this.values.push(value);\n            return null;\n        }\n    }\n    remove(key) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.len() == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastKey = this.keys.get(this.len() - 1);\n                if (!lastKey) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastKey != key) {\n                    let lastLookupKey = this.keyIndexPrefix + JSON.stringify(lastKey);\n                    near.storageWrite(lastLookupKey, indexRaw);\n                }\n            }\n            let index = this.deserializeIndex(indexRaw);\n            this.keys.swapRemove(index);\n            return this.values.swapRemove(index);\n        }\n        return null;\n    }\n    clear() {\n        for (let key of this.keys) {\n            let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n            near.storageRemove(indexLookup);\n        }\n        this.keys.clear();\n        this.values.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return new UnorderedMapIterator(this);\n    }\n    extend(kvs) {\n        for (let [k, v] of kvs) {\n            this.set(k, v);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let map = new UnorderedMap(data.prefix);\n        // reconstruct UnorderedMap\n        map.length = data.length;\n        // reconstruct keys Vector\n        map.keys = new Vector(data.prefix + \"k\");\n        map.keys.length = data.keys.length;\n        // reconstruct values Vector\n        map.values = new Vector(data.prefix + \"v\");\n        map.values.length = data.values.length;\n        return map;\n    }\n}\nclass UnorderedMapIterator {\n    constructor(unorderedMap) {\n        this.keys = new VectorIterator(unorderedMap.keys);\n        this.values = new VectorIterator(unorderedMap.values);\n    }\n    next() {\n        let key = this.keys.next();\n        let value = this.values.next();\n        if (key.done != value.done) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return { value: [key.value, value.value], done: key.done };\n    }\n}\n","import { near, UnorderedMap } from \"near-sdk-js\";\n\n/**\n * all avaivables problems\n * @todo add more categories\n */\nexport enum Categories {\n  Lights,\n  Street,\n  Neighborhood,\n  Water_Problems,\n}\n\n/**\n * status of each of the tickets\n */\nexport enum Statuses {\n  done,\n  inProgess,\n  submited,\n}\n\n/**\n * represent the location of the problem\n */\n\n/*export interface Loc {\n  lon: string;\n  lat: string;\n}*/\n\n/**\n * represent the problem to be solved\n */\nexport class CitizenComplaint {\n  status: Statuses;\n  votes: UnorderedMap;\n  solver: string;\n  voteCount: number;\n\n  /**\n   *\n   * @param title how it will displayed\n   * @param category what topic the ticket is\n   * @param location where is the problem\n   * @param ticketOwner who send the ticket\n   */\n  constructor(\n    public title: string,\n    public description: string,\n    public category: Categories,\n    public location: string,\n    public ticketOwner: string,\n    public timestamp: number,\n    public id: number,\n    public balance: bigint\n  ) {\n    this.votes = new UnorderedMap(\"v\");\n    this.votes.set(ticketOwner, true);\n    this.voteCount = 1;\n    this.solver = \"\";\n    this.status = Statuses.submited;\n  }\n\n  /**\n   * only who already voted can revert it\n   * @param voter string accountid\n   */\n  removeVote(voter: string): void {\n    if ((this.votes.get(voter) || false) && this.ticketOwner != voter) {\n      this.votes.set(voter, false);\n      this.voteCount -= 1;\n    }\n  }\n\n  /**\n   * @todo restrict who can be solver\n   * @param voter the guy  assigned to solve this ticket\n   */\n  changeStatusToInProgress(voter: string): void {\n    if (this.ticketOwner != voter && this.status != Statuses.done) {\n      this.solver = voter;\n      this.status = Statuses.inProgess;\n    }\n  }\n\n  /**\n   * @todo add capabillity in order the solver can  request the finalization of a ticket\n   * @param voter in this implementation it can be just the guy who submitted the ticket\n   */\n  changeStatusToDone(voter: string): void {\n    if (this.ticketOwner == voter && this.status != Statuses.done) {\n      this.status = Statuses.done;\n    }\n  }\n\n  static from({\n    id,\n    ticketOwner,\n    title,\n    timestamp,\n    category,\n    votes,\n    voteCount,\n    solver,\n    status,\n    location,\n    description,\n    balance,\n  }: CitizenComplaint): CitizenComplaint {\n    const complaint = new CitizenComplaint(\n      title,\n      description,\n      category,\n      location,\n      ticketOwner,\n      timestamp,\n      id,\n      balance\n    );\n\n    complaint.votes = new UnorderedMap(\"v\");\n    complaint.voteCount = voteCount;\n    complaint.solver = solver;\n    complaint.status = status;\n\n    near.log(\"logging votes\", votes);\n\n    return complaint;\n  }\n}\n","import {\n  NearBindgen,\n  NearContract,\n  near,\n  call,\n  view,\n  Vector,\n  UnorderedMap,\n  assert,\n} from \"near-sdk-js\";\nimport { Categories, CitizenComplaint, Statuses } from \"./models\";\n\nconst MAX_DESCRIPTION_LENGTH: number = 233;\nconst MAX_COMPLAINTS: number = 5;\n\nBigInt.prototype[\"toJSON\"] = function () {\n  return this.toString();\n};\n\n// The @NearBindgen decorator allows this code to compile to Base64.\n@NearBindgen\nexport class Contract extends NearContract {\n  private complaints: Vector = new Vector(\"complaint\");\n  private userComplaints: UnorderedMap = new UnorderedMap(\"users\");\n\n  constructor() {\n    //execute the NEAR Contract's constructor\n    super();\n  }\n\n  default() {\n    return new Contract();\n  }\n\n  /**\n   *  CALL FUNCTIONS\n   */\n\n  @call\n  addNewComplaint({\n    title,\n    description,\n    category,\n    location,\n  }: {\n    title: string;\n    description: string;\n    category: Categories;\n    location: string;\n  }): void {\n    assert(title.length > 0, \"the title is required\");\n    assert(\n      description.length > 0 && description.length < MAX_DESCRIPTION_LENGTH,\n      \"description lenght is invalid\"\n    );\n\n    //this key will be stored on the this.userComplaints map\n    const key = `${near.signerAccountId()}u`;\n    let numberOfComplaints = 0;\n\n    //check if the user has some complaints already\n    if (this.userComplaints.keys.toArray().includes(key)) {\n      //if haves let see if he reach the max complaints\n      assert(\n        this.userComplaints.get(key) <= MAX_COMPLAINTS,\n        \"you reached the maximum amount of complaint\"\n      );\n      numberOfComplaints = this.userComplaints.get(key) as number;\n    }\n\n    this.complaints.push(\n      new CitizenComplaint(\n        title,\n        description,\n        category,\n        location,\n        near.signerAccountId() + this.complaints.len(),\n        Number(near.blockTimestamp()),\n        this.complaints.length,\n        BigInt(Number(near.attachedDeposit()))\n      )\n    );\n\n    this.userComplaints.set(key, numberOfComplaints + 1);\n  }\n\n  @call\n  voteComplaint({ id }: { id: number }): CitizenComplaint {\n    assert(id >= 0, \"we dont have negative this.complaints\");\n    assert(id < this.complaints.len(), \"we dont have that complaint\");\n\n    const existing = this.complaints.get(id);\n    near.log(\"logging in contract\", existing);\n    const complaint = CitizenComplaint.from(\n      this.complaints.get(id) as CitizenComplaint\n    );\n    const key = `${near.signerAccountId()}${id}`;\n\n    // assert(!complaint.votes.keys.toArray().includes(key), \" already voted\");\n    assert(\n      complaint.status != Statuses.done,\n      \"this complaint is already done broh\"\n    );\n\n    complaint.balance += BigInt(Number(near.attachedDeposit()));\n    complaint.voteCount += 1;\n    complaint.votes.set(key, true);\n    this.complaints.replace(id, complaint);\n\n    return complaint;\n  }\n\n  @call\n  removeVote({ id }: { id: number }): CitizenComplaint {\n    assert(id >= 0, \"we dont have negative this.complaints\");\n    assert(!this.complaints.isEmpty(), \"there are not this.complaints\");\n    assert(id <= this.complaints.len() - 1, \"we dont have that complaint\");\n\n    const complaint = this.complaints.get(id) as CitizenComplaint;\n    const key = `${near.signerAccountId()}${id}`;\n\n    assert(\n      complaint.ticketOwner !== key,\n      \"sorry the owner the ticker cant unvote\"\n    );\n    assert(\n      complaint.votes.keys.toArray().includes(key),\n      \"you haven't voted this complaint\"\n    );\n    assert(\n      complaint.status !== Statuses.done,\n      \"this complaint is already done broh\"\n    );\n\n    complaint.voteCount -= 1;\n    complaint.votes.remove(key);\n    this.complaints.replace(id, complaint);\n\n    return complaint;\n  }\n\n  /**\n * \n\n\n donate(id:number):CitizenComplaint{\n\n    let complaint  = this.complaints[id]\n\n  assert(complaint.status!= Statuses.done,\"this complaint is alreadt done\")\n  assert(id>=0 ,\"we dont have negative this.complaints\")\n  assert(id<= (complaints.length-1),\"we dont have that complaint\")\n  assert(!complaints.isEmpty,\"there are not this.complaints\")\n  assert(id<= (complaints.length-1),\"we dont have that complaint\")\n  assert(u128.gt(near.attachedDeposit,u128.Zero),\"sorry you dont send funds broh\")\n  complaint.balance=u128.add(complaint.balance , near.attachedDeposit)\n  this.complaints.replace(<number>id, complaint)\n   return complaint\n\n}\n */\n\n  @call\n  takeComplaint({ id }: { id: number }): CitizenComplaint {\n    assert(id >= 0, \"we dont have negative this.complaints\");\n    assert(!this.complaints.isEmpty(), \"there are not this.complaints\");\n    assert(id < this.complaints.len(), \"we dont have that complaint\");\n\n    const complaint = this.complaints.get(id) as CitizenComplaint;\n    const key = `${near.signerAccountId()}${id}`;\n\n    assert(complaint.solver === \"\", \"sorry this complaint it's taken\");\n    assert(\n      complaint.status !== Statuses.done,\n      \"this complaint is already done broh\"\n    );\n    assert(\n      complaint.ticketOwner !== key,\n      \"sorry the owner  cant be the solver\"\n    );\n\n    this.complaints.replace(id, {\n      ...complaint,\n      status: Statuses.inProgess,\n      solver: near.signerAccountId(),\n    });\n\n    return complaint;\n  }\n\n  @call\n  finishComplaint({ id }: { id: number }): CitizenComplaint {\n    const complaint = this.complaints.get(id) as CitizenComplaint;\n    const key = `${near.signerAccountId()}${id}`;\n\n    assert(\n      key === complaint.ticketOwner,\n      \"sorry only the ticket owner can mark the complaint as done\"\n    );\n    assert(complaint.solver.length > 0, \" there is not assigned any solver\");\n    assert(\n      complaint.status !== Statuses.done,\n      \"this complaint is already done broh\"\n    );\n\n    this.complaints.replace(id, { ...complaint, status: Statuses.done });\n\n    const complaintSolver = near.promiseBatchCreate(complaint.solver);\n    near.promiseBatchActionTransfer(complaintSolver, complaint.balance);\n    near.promiseReturn(complaintSolver);\n\n    return complaint;\n  }\n\n  /**\n   *  VIEW FUNCTIONS\n   */\n\n  @view\n  getComplaints(): Array<CitizenComplaint> {\n    return this.complaints.toArray() as Array<CitizenComplaint>;\n  }\n\n  @view\n  getComplaintInfo(id: number): CitizenComplaint {\n    assert(this.complaints.length > 0, \"we dont have any this.complaints\");\n    assert(id >= 0, \"we dont have negative this.complaints\");\n    assert(id <= this.complaints.length - 1, \"we dont have that complaint\");\n\n    return this.complaints.get(id) as CitizenComplaint;\n  }\n\n  @view\n  getNComplaints(): number {\n    return this.complaints.len();\n  }\n\n  @view\n  getNumberOfComplaints(): number {\n    const key = near.signerAccountId() + \"u\";\n\n    return (this.userComplaints.get(key) as number) || 0;\n  }\n}\n"],"names":["call","target","key","descriptor","view","NearBindgen","_init","args","deserializeArgs","ret","init","serialize","_get","Object","create","prototype","U64_MAX","EVICTED_REGISTER","log","params","env","map","x","undefined","JSON","stringify","join","signerAccountId","signer_account_id","read_register","blockTimestamp","block_timestamp","attachedDeposit","attached_deposit","storageRead","storage_read","storageGetEvicted","input","promiseBatchCreate","accountId","promise_batch_create","promiseBatchActionTransfer","promiseIndex","amount","promise_batch_action_transfer","PromiseResult","promiseReturn","promiseIdx","promise_return","storageWrite","value","exist","storage_write","storageRemove","storage_remove","NearContract","deserialize","rawState","near","state","parse","c","default","assign","item","constructor","Error","serializeReturn","u8ArrayToBytes","array","e","String","fromCharCode","bytesToU8Array","bytes","Uint8Array","length","i","charCodeAt","assert","b","str","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","prefix","index","data","Uint32Array","buffer","Vector","len","isEmpty","get","storageKey","swapRemove","pop","last","push","element","lastIndex","lastKey","replace","extend","elements","Symbol","iterator","VectorIterator","clear","toArray","v","vector","current","next","done","UnorderedMap","keyIndexPrefix","indexKey","indexValue","keys","values","keysLen","valuesLen","keysIsEmpty","valuesIsEmpty","serializeIndex","deserializeIndex","rawIndex","getIndexRaw","indexLookup","indexRaw","set","nextIndex","nextIndexRaw","remove","lastLookupKey","UnorderedMapIterator","kvs","k","unorderedMap","Categories","Statuses","CitizenComplaint","title","description","category","location","ticketOwner","timestamp","id","balance","votes","voteCount","solver","status","submited","removeVote","voter","changeStatusToInProgress","inProgess","changeStatusToDone","from","complaint","MAX_DESCRIPTION_LENGTH","MAX_COMPLAINTS","BigInt","toString","Contract","complaints","userComplaints","addNewComplaint","numberOfComplaints","includes","Number","voteComplaint","existing","takeComplaint","finishComplaint","complaintSolver","getComplaints","getComplaintInfo","getNComplaints","getNumberOfComplaints"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,SAASA,IAAT,CAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,UAA3B,EAAuC,EAC7C;AACM,SAASC,IAAT,CAAcH,MAAd,EAAsBC,GAAtB,EAA2BC,UAA3B,EAAuC,EAC7C;AACM,SAASE,WAAT,CAAqBJ,MAArB,EAA6B;EAChC,OAAO,cAAcA,MAAd,CAAqB;AACZ,IAAA,OAALK,KAAK,GAAG;AACX;AACA,MAAA,IAAIC,IAAI,GAAGN,MAAM,CAACO,eAAP,EAAX,CAAA;MACA,IAAIC,GAAG,GAAG,IAAIR,MAAJ,CAAWM,IAAX,CAAV,CAHW;;MAKXE,GAAG,CAACC,IAAJ,EAAA,CALW;;AAOXD,MAAAA,GAAG,CAACE,SAAJ,EAAA,CAAA;AACA,MAAA,OAAOF,GAAP,CAAA;AACH,KAAA;;AACU,IAAA,OAAJG,IAAI,GAAG;MACV,IAAIH,GAAG,GAAGI,MAAM,CAACC,MAAP,CAAcb,MAAM,CAACc,SAArB,CAAV,CAAA;AACA,MAAA,OAAON,GAAP,CAAA;AACH,KAAA;;GAdL,CAAA;AAgBH;;ACrBD,MAAMO,OAAO,GAAG,EAAM,IAAA,GAAN,GAAY,EAA5B,CAAA;AACA,MAAMC,gBAAgB,GAAGD,OAAO,GAAG,EAAnC,CAAA;AACO,SAASE,GAAT,CAAa,GAAGC,MAAhB,EAAwB;AAC3BC,EAAAA,GAAG,CAACF,GAAJ,CAAS,CAAEC,EAAAA,MAAM,CACZE,GADM,CACFC,CAAC,IAAIA,CAAC,KAAKC,SAAN,GAAkB,WAAlB,GAAgCD,CADnC,CACsC;AADtC,GAEND,GAFM,CAEFC,CAAC,IAAI,OAAQA,CAAR,KAAe,QAAf,GAA0BE,IAAI,CAACC,SAAL,CAAeH,CAAf,CAA1B,GAA8CA,CAFjD,CAEoD;AAFpD,GAGNI,IAHM,CAGD,GAHC,CAGI,EAHf;AAAA,GAAA,CAAA;AAKH,CAAA;AACM,SAASC,eAAT,GAA2B;EAC9BP,GAAG,CAACQ,iBAAJ,CAAsB,CAAtB,CAAA,CAAA;AACA,EAAA,OAAOR,GAAG,CAACS,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,CAAA;AAeM,SAASC,cAAT,GAA0B;EAC7B,OAAOV,GAAG,CAACW,eAAJ,EAAP,CAAA;AACH,CAAA;AAIM,SAASC,eAAT,GAA2B;EAC9B,OAAOZ,GAAG,CAACa,gBAAJ,EAAP,CAAA;AACH,CAAA;AAmDM,SAASC,WAAT,CAAqBhC,GAArB,EAA0B;EAC7B,IAAIO,GAAG,GAAGW,GAAG,CAACe,YAAJ,CAAiBjC,GAAjB,EAAsB,CAAtB,CAAV,CAAA;;EACA,IAAIO,GAAG,KAAK,EAAZ,EAAgB;AACZ,IAAA,OAAOW,GAAG,CAACS,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,GAFD,MAGK;AACD,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;AACJ,CAAA;AAwFM,SAASO,iBAAT,GAA6B;AAChC,EAAA,OAAOhB,GAAG,CAACS,aAAJ,CAAkBZ,gBAAlB,CAAP,CAAA;AACH,CAAA;AASM,SAASoB,KAAT,GAAiB;EACpBjB,GAAG,CAACiB,KAAJ,CAAU,CAAV,CAAA,CAAA;AACA,EAAA,OAAOjB,GAAG,CAACS,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,CAAA;AAsBM,SAASS,kBAAT,CAA4BC,SAA5B,EAAuC;AAC1C,EAAA,OAAOnB,GAAG,CAACoB,oBAAJ,CAAyBD,SAAzB,CAAP,CAAA;AACH,CAAA;AAaM,SAASE,0BAAT,CAAoCC,YAApC,EAAkDC,MAAlD,EAA0D;AAC7DvB,EAAAA,GAAG,CAACwB,6BAAJ,CAAkCF,YAAlC,EAAgDC,MAAhD,CAAA,CAAA;AACH,CAAA;AAmBM,IAAIE,aAAJ,CAAA;;AACP,CAAC,UAAUA,aAAV,EAAyB;EACtBA,aAAa,CAACA,aAAa,CAAC,UAAD,CAAb,GAA4B,CAA7B,CAAb,GAA+C,UAA/C,CAAA;EACAA,aAAa,CAACA,aAAa,CAAC,YAAD,CAAb,GAA8B,CAA/B,CAAb,GAAiD,YAAjD,CAAA;EACAA,aAAa,CAACA,aAAa,CAAC,QAAD,CAAb,GAA0B,CAA3B,CAAb,GAA6C,QAA7C,CAAA;AACH,CAJD,EAIGA,aAAa,KAAKA,aAAa,GAAG,EAArB,CAJhB,CAAA,CAAA;AAkBO,SAASC,aAAT,CAAuBC,UAAvB,EAAmC;EACtC3B,GAAG,CAAC4B,cAAJ,CAAmBD,UAAnB,CAAA,CAAA;AACH,CAAA;AACM,SAASE,YAAT,CAAsB/C,GAAtB,EAA2BgD,KAA3B,EAAkC;EACrC,IAAIC,KAAK,GAAG/B,GAAG,CAACgC,aAAJ,CAAkBlD,GAAlB,EAAuBgD,KAAvB,EAA8BjC,gBAA9B,CAAZ,CAAA;;EACA,IAAIkC,KAAK,KAAK,EAAd,EAAkB;AACd,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,KAAP,CAAA;AACH,CAAA;AACM,SAASE,aAAT,CAAuBnD,GAAvB,EAA4B;EAC/B,IAAIiD,KAAK,GAAG/B,GAAG,CAACkC,cAAJ,CAAmBpD,GAAnB,EAAwBe,gBAAxB,CAAZ,CAAA;;EACA,IAAIkC,KAAK,KAAK,EAAd,EAAkB;AACd,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,KAAP,CAAA;AACH;;AChSM,MAAMI,YAAN,CAAmB;AACtBC,EAAAA,WAAW,GAAG;AACV,IAAA,MAAMC,QAAQ,GAAGC,WAAA,CAAiB,OAAjB,CAAjB,CAAA;;AACA,IAAA,IAAID,QAAJ,EAAc;MACV,MAAME,KAAK,GAAGnC,IAAI,CAACoC,KAAL,CAAWH,QAAX,CAAd,CADU;;AAGV,MAAA,IAAII,CAAC,GAAG,IAAKC,CAAAA,OAAL,EAAR,CAAA;AACAjD,MAAAA,MAAM,CAACkD,MAAP,CAAc,IAAd,EAAoBJ,KAApB,CAAA,CAAA;;AACA,MAAA,KAAK,MAAMK,IAAX,IAAmBH,CAAnB,EAAsB;QAClB,IAAIA,CAAC,CAACG,IAAD,CAAD,CAAQC,WAAR,EAAqBT,WAArB,KAAqCjC,SAAzC,EAAoD;AAChD,UAAA,IAAA,CAAKyC,IAAL,CAAA,GAAaH,CAAC,CAACG,IAAD,CAAD,CAAQC,WAAR,CAAoBT,WAApB,CAAgC,IAAKQ,CAAAA,IAAL,CAAhC,CAAb,CAAA;AACH,SAAA;AACJ,OAAA;AACJ,KAVD,MAWK;AACD,MAAA,MAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN,CAAA;AACH,KAAA;AACJ,GAAA;;AACDvD,EAAAA,SAAS,GAAG;IACR+C,YAAA,CAAkB,OAAlB,EAA2BlC,IAAI,CAACC,SAAL,CAAe,IAAf,CAA3B,CAAA,CAAA;AACH,GAAA;;AACqB,EAAA,OAAfjB,eAAe,GAAG;AACrB,IAAA,IAAID,IAAI,GAAGmD,KAAA,EAAX,CAAA;AACA,IAAA,OAAOlC,IAAI,CAACoC,KAAL,CAAWrD,IAAI,IAAI,IAAnB,CAAP,CAAA;AACH,GAAA;;EACqB,OAAf4D,eAAe,CAAC1D,GAAD,EAAM;AACxB,IAAA,OAAOe,IAAI,CAACC,SAAL,CAAehB,GAAf,CAAP,CAAA;AACH,GAAA;;AACDC,EAAAA,IAAI,GAAG,EAAG;;AA5BY;;ACDnB,SAAS0D,cAAT,CAAwBC,KAAxB,EAA+B;EAClC,IAAI5D,GAAG,GAAG,EAAV,CAAA;;AACA,EAAA,KAAK,IAAI6D,CAAT,IAAcD,KAAd,EAAqB;AACjB5D,IAAAA,GAAG,IAAI8D,MAAM,CAACC,YAAP,CAAoBF,CAApB,CAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAO7D,GAAP,CAAA;AACH;AAED;;AACO,SAASgE,cAAT,CAAwBC,KAAxB,EAA+B;EAClC,IAAIjE,GAAG,GAAG,IAAIkE,UAAJ,CAAeD,KAAK,CAACE,MAArB,CAAV,CAAA;;AACA,EAAA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACE,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;IACnCpE,GAAG,CAACoE,CAAD,CAAH,GAASH,KAAK,CAACI,UAAN,CAAiBD,CAAjB,CAAT,CAAA;AACH,GAAA;;AACD,EAAA,OAAOpE,GAAP,CAAA;AACH,CAAA;;AAkBM,SAASsE,MAAT,CAAgBC,CAAhB,EAAmBC,GAAnB,EAAwB;AAC3B,EAAA,IAAID,CAAJ,EAAO;AACH,IAAA,OAAA;AACH,GAFD,MAGK;AACD,IAAA,MAAMd,KAAK,CAAC,oBAAuBe,GAAAA,GAAxB,CAAX,CAAA;AACH,GAAA;AACJ;;ACtCD,MAAMC,uBAAuB,GAAG,qBAAhC,CAAA;AACA,MAAMC,wBAAsB,GAAG,wGAA/B,CAAA;;AACA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,KAA5B,EAAmC;EAC/B,IAAIC,IAAI,GAAG,IAAIC,WAAJ,CAAgB,CAACF,KAAD,CAAhB,CAAX,CAAA;EACA,IAAIjB,KAAK,GAAG,IAAIM,UAAJ,CAAeY,IAAI,CAACE,MAApB,CAAZ,CAAA;AACA,EAAA,IAAIvF,GAAG,GAAGkE,cAAc,CAACC,KAAD,CAAxB,CAAA;EACA,OAAOgB,MAAM,GAAGnF,GAAhB,CAAA;AACH;AAED;;;AACO,MAAMwF,MAAN,CAAa;EAChBzB,WAAW,CAACoB,MAAD,EAAS;IAChB,IAAKT,CAAAA,MAAL,GAAc,CAAd,CAAA;IACA,IAAKS,CAAAA,MAAL,GAAcA,MAAd,CAAA;AACH,GAAA;;AACDM,EAAAA,GAAG,GAAG;AACF,IAAA,OAAO,KAAKf,MAAZ,CAAA;AACH,GAAA;;AACDgB,EAAAA,OAAO,GAAG;IACN,OAAO,IAAA,CAAKhB,MAAL,IAAe,CAAtB,CAAA;AACH,GAAA;;EACDiB,GAAG,CAACP,KAAD,EAAQ;AACP,IAAA,IAAIA,KAAK,IAAI,IAAKV,CAAAA,MAAlB,EAA0B;AACtB,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;;IACD,IAAIkB,UAAU,GAAGV,UAAU,CAAC,KAAKC,MAAN,EAAcC,KAAd,CAA3B,CAAA;IACA,OAAO9D,IAAI,CAACoC,KAAL,CAAWF,WAAA,CAAiBoC,UAAjB,CAAX,CAAP,CAAA;AACH,GAjBe;AAmBhB;AACA;;;EACAC,UAAU,CAACT,KAAD,EAAQ;AACd,IAAA,IAAIA,KAAK,IAAI,IAAKV,CAAAA,MAAlB,EAA0B;AACtB,MAAA,MAAM,IAAIV,KAAJ,CAAUgB,uBAAV,CAAN,CAAA;KADJ,MAGK,IAAII,KAAK,GAAG,CAAR,IAAa,IAAA,CAAKV,MAAtB,EAA8B;MAC/B,OAAO,IAAA,CAAKoB,GAAL,EAAP,CAAA;AACH,KAFI,MAGA;MACD,IAAI9F,GAAG,GAAGkF,UAAU,CAAC,KAAKC,MAAN,EAAcC,KAAd,CAApB,CAAA;AACA,MAAA,IAAIW,IAAI,GAAG,IAAKD,CAAAA,GAAL,EAAX,CAAA;;AACA,MAAA,IAAItC,YAAA,CAAkBxD,GAAlB,EAAuBsB,IAAI,CAACC,SAAL,CAAewE,IAAf,CAAvB,CAAJ,EAAkD;QAC9C,OAAOzE,IAAI,CAACoC,KAAL,CAAWF,iBAAA,EAAX,CAAP,CAAA;AACH,OAFD,MAGK;AACD,QAAA,MAAM,IAAIQ,KAAJ,CAAUiB,wBAAV,CAAN,CAAA;AACH,OAAA;AACJ,KAAA;AACJ,GAAA;;EACDe,IAAI,CAACC,OAAD,EAAU;IACV,IAAIjG,GAAG,GAAGkF,UAAU,CAAC,KAAKC,MAAN,EAAc,IAAKT,CAAAA,MAAnB,CAApB,CAAA;IACA,IAAKA,CAAAA,MAAL,IAAe,CAAf,CAAA;IACAlB,YAAA,CAAkBxD,GAAlB,EAAuBsB,IAAI,CAACC,SAAL,CAAe0E,OAAf,CAAvB,CAAA,CAAA;AACH,GAAA;;AACDH,EAAAA,GAAG,GAAG;IACF,IAAI,IAAA,CAAKJ,OAAL,EAAJ,EAAoB;AAChB,MAAA,OAAO,IAAP,CAAA;AACH,KAFD,MAGK;AACD,MAAA,IAAIQ,SAAS,GAAG,IAAKxB,CAAAA,MAAL,GAAc,CAA9B,CAAA;MACA,IAAIyB,OAAO,GAAGjB,UAAU,CAAC,KAAKC,MAAN,EAAce,SAAd,CAAxB,CAAA;MACA,IAAKxB,CAAAA,MAAL,IAAe,CAAf,CAAA;;AACA,MAAA,IAAIlB,aAAA,CAAmB2C,OAAnB,CAAJ,EAAiC;QAC7B,OAAO7E,IAAI,CAACoC,KAAL,CAAWF,iBAAA,EAAX,CAAP,CAAA;AACH,OAFD,MAGK;AACD,QAAA,MAAM,IAAIQ,KAAJ,CAAUiB,wBAAV,CAAN,CAAA;AACH,OAAA;AACJ,KAAA;AACJ,GAAA;;AACDmB,EAAAA,OAAO,CAAChB,KAAD,EAAQa,OAAR,EAAiB;AACpB,IAAA,IAAIb,KAAK,IAAI,IAAKV,CAAAA,MAAlB,EAA0B;AACtB,MAAA,MAAM,IAAIV,KAAJ,CAAUgB,uBAAV,CAAN,CAAA;AACH,KAFD,MAGK;MACD,IAAIhF,GAAG,GAAGkF,UAAU,CAAC,KAAKC,MAAN,EAAcC,KAAd,CAApB,CAAA;;AACA,MAAA,IAAI5B,YAAA,CAAkBxD,GAAlB,EAAuBsB,IAAI,CAACC,SAAL,CAAe0E,OAAf,CAAvB,CAAJ,EAAqD;QACjD,OAAO3E,IAAI,CAACoC,KAAL,CAAWF,iBAAA,EAAX,CAAP,CAAA;AACH,OAFD,MAGK;AACD,QAAA,MAAM,IAAIQ,KAAJ,CAAUiB,wBAAV,CAAN,CAAA;AACH,OAAA;AACJ,KAAA;AACJ,GAAA;;EACDoB,MAAM,CAACC,QAAD,EAAW;AACb,IAAA,KAAK,IAAIL,OAAT,IAAoBK,QAApB,EAA8B;MAC1B,IAAKN,CAAAA,IAAL,CAAUC,OAAV,CAAA,CAAA;AACH,KAAA;AACJ,GAAA;;EACe,CAAfM,MAAM,CAACC,QAAQ,CAAI,GAAA;AAChB,IAAA,OAAO,IAAIC,cAAJ,CAAmB,IAAnB,CAAP,CAAA;AACH,GAAA;;AACDC,EAAAA,KAAK,GAAG;AACJ,IAAA,KAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,IAAA,CAAKD,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;MAClC,IAAI3E,GAAG,GAAGkF,UAAU,CAAC,KAAKC,MAAN,EAAcR,CAAd,CAApB,CAAA;MACAnB,aAAA,CAAmBxD,GAAnB,CAAA,CAAA;AACH,KAAA;;IACD,IAAK0E,CAAAA,MAAL,GAAc,CAAd,CAAA;AACH,GAAA;;AACDiC,EAAAA,OAAO,GAAG;IACN,IAAIpG,GAAG,GAAG,EAAV,CAAA;;AACA,IAAA,KAAK,IAAIqG,CAAT,IAAc,IAAd,EAAoB;MAChBrG,GAAG,CAACyF,IAAJ,CAASY,CAAT,CAAA,CAAA;AACH,KAAA;;AACD,IAAA,OAAOrG,GAAP,CAAA;AACH,GAAA;;AACDE,EAAAA,SAAS,GAAG;AACR,IAAA,OAAOa,IAAI,CAACC,SAAL,CAAe,IAAf,CAAP,CAAA;AACH,GAlGe;;;EAoGE,OAAX+B,WAAW,CAAC+B,IAAD,EAAO;IACrB,IAAIwB,MAAM,GAAG,IAAIrB,MAAJ,CAAWH,IAAI,CAACF,MAAhB,CAAb,CAAA;AACA0B,IAAAA,MAAM,CAACnC,MAAP,GAAgBW,IAAI,CAACX,MAArB,CAAA;AACA,IAAA,OAAOmC,MAAP,CAAA;AACH,GAAA;;AAxGe,CAAA;AA0Gb,MAAMJ,cAAN,CAAqB;EACxB1C,WAAW,CAAC8C,MAAD,EAAS;IAChB,IAAKC,CAAAA,OAAL,GAAe,CAAf,CAAA;IACA,IAAKD,CAAAA,MAAL,GAAcA,MAAd,CAAA;AACH,GAAA;;AACDE,EAAAA,IAAI,GAAG;IACH,IAAI,IAAA,CAAKD,OAAL,GAAe,IAAA,CAAKD,MAAL,CAAYpB,GAAZ,EAAnB,EAAsC;MAClC,IAAIzC,KAAK,GAAG,IAAK6D,CAAAA,MAAL,CAAYlB,GAAZ,CAAgB,IAAKmB,CAAAA,OAArB,CAAZ,CAAA;MACA,IAAKA,CAAAA,OAAL,IAAgB,CAAhB,CAAA;MACA,OAAO;QAAE9D,KAAF;AAASgE,QAAAA,IAAI,EAAE,KAAA;OAAtB,CAAA;AACH,KAAA;;IACD,OAAO;AAAEhE,MAAAA,KAAK,EAAE,IAAT;AAAegE,MAAAA,IAAI,EAAE,IAAA;KAA5B,CAAA;AACH,GAAA;;AAZuB;;ACnH5B,MAAM/B,sBAAsB,GAAG,wGAA/B,CAAA;AACO,MAAMgC,YAAN,CAAmB;EACtBlD,WAAW,CAACoB,MAAD,EAAS;IAChB,IAAKT,CAAAA,MAAL,GAAc,CAAd,CAAA;IACA,IAAKS,CAAAA,MAAL,GAAcA,MAAd,CAAA;AACA,IAAA,IAAA,CAAK+B,cAAL,GAAsB/B,MAAM,GAAG,GAA/B,CAAA;AACA,IAAA,IAAIgC,QAAQ,GAAGhC,MAAM,GAAG,GAAxB,CAAA;AACA,IAAA,IAAIiC,UAAU,GAAGjC,MAAM,GAAG,GAA1B,CAAA;AACA,IAAA,IAAA,CAAKkC,IAAL,GAAY,IAAI7B,MAAJ,CAAW2B,QAAX,CAAZ,CAAA;AACA,IAAA,IAAA,CAAKG,MAAL,GAAc,IAAI9B,MAAJ,CAAW4B,UAAX,CAAd,CAAA;AACH,GAAA;;AACD3B,EAAAA,GAAG,GAAG;AACF,IAAA,IAAI8B,OAAO,GAAG,IAAA,CAAKF,IAAL,CAAU5B,GAAV,EAAd,CAAA;AACA,IAAA,IAAI+B,SAAS,GAAG,IAAA,CAAKF,MAAL,CAAY7B,GAAZ,EAAhB,CAAA;;IACA,IAAI8B,OAAO,IAAIC,SAAf,EAA0B;AACtB,MAAA,MAAM,IAAIxD,KAAJ,CAAUiB,sBAAV,CAAN,CAAA;AACH,KAAA;;AACD,IAAA,OAAOsC,OAAP,CAAA;AACH,GAAA;;AACD7B,EAAAA,OAAO,GAAG;AACN,IAAA,IAAI+B,WAAW,GAAG,IAAA,CAAKJ,IAAL,CAAU3B,OAAV,EAAlB,CAAA;AACA,IAAA,IAAIgC,aAAa,GAAG,IAAA,CAAKJ,MAAL,CAAY5B,OAAZ,EAApB,CAAA;;IACA,IAAI+B,WAAW,IAAIC,aAAnB,EAAkC;AAC9B,MAAA,MAAM,IAAI1D,KAAJ,CAAUiB,sBAAV,CAAN,CAAA;AACH,KAAA;;AACD,IAAA,OAAOwC,WAAP,CAAA;AACH,GAAA;;EACDE,cAAc,CAACvC,KAAD,EAAQ;IAClB,IAAIC,IAAI,GAAG,IAAIC,WAAJ,CAAgB,CAACF,KAAD,CAAhB,CAAX,CAAA;IACA,IAAIjB,KAAK,GAAG,IAAIM,UAAJ,CAAeY,IAAI,CAACE,MAApB,CAAZ,CAAA;IACA,OAAOrB,cAAc,CAACC,KAAD,CAArB,CAAA;AACH,GAAA;;EACDyD,gBAAgB,CAACC,QAAD,EAAW;AACvB,IAAA,IAAI1D,KAAK,GAAGI,cAAc,CAACsD,QAAD,CAA1B,CAAA;IACA,IAAIxC,IAAI,GAAG,IAAIC,WAAJ,CAAgBnB,KAAK,CAACoB,MAAtB,CAAX,CAAA;IACA,OAAOF,IAAI,CAAC,CAAD,CAAX,CAAA;AACH,GAAA;;EACDyC,WAAW,CAAC9H,GAAD,EAAM;IACb,IAAI+H,WAAW,GAAG,IAAA,CAAKb,cAAL,GAAsB5F,IAAI,CAACC,SAAL,CAAevB,GAAf,CAAxC,CAAA;AACA,IAAA,IAAIgI,QAAQ,GAAGxE,WAAA,CAAiBuE,WAAjB,CAAf,CAAA;AACA,IAAA,OAAOC,QAAP,CAAA;AACH,GAAA;;EACDrC,GAAG,CAAC3F,GAAD,EAAM;AACL,IAAA,IAAIgI,QAAQ,GAAG,IAAA,CAAKF,WAAL,CAAiB9H,GAAjB,CAAf,CAAA;;AACA,IAAA,IAAIgI,QAAJ,EAAc;AACV,MAAA,IAAI5C,KAAK,GAAG,IAAA,CAAKwC,gBAAL,CAAsBI,QAAtB,CAAZ,CAAA;MACA,IAAIhF,KAAK,GAAG,IAAKsE,CAAAA,MAAL,CAAY3B,GAAZ,CAAgBP,KAAhB,CAAZ,CAAA;;AACA,MAAA,IAAIpC,KAAJ,EAAW;AACP,QAAA,OAAOA,KAAP,CAAA;AACH,OAFD,MAGK;AACD,QAAA,MAAM,IAAIgB,KAAJ,CAAUiB,sBAAV,CAAN,CAAA;AACH,OAAA;AACJ,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACDgD,EAAAA,GAAG,CAACjI,GAAD,EAAMgD,KAAN,EAAa;IACZ,IAAI+E,WAAW,GAAG,IAAA,CAAKb,cAAL,GAAsB5F,IAAI,CAACC,SAAL,CAAevB,GAAf,CAAxC,CAAA;AACA,IAAA,IAAIgI,QAAQ,GAAGxE,WAAA,CAAiBuE,WAAjB,CAAf,CAAA;;AACA,IAAA,IAAIC,QAAJ,EAAc;AACV,MAAA,IAAI5C,KAAK,GAAG,IAAA,CAAKwC,gBAAL,CAAsBI,QAAtB,CAAZ,CAAA;MACA,OAAO,IAAA,CAAKV,MAAL,CAAYlB,OAAZ,CAAoBhB,KAApB,EAA2BpC,KAA3B,CAAP,CAAA;AACH,KAHD,MAIK;AACD,MAAA,IAAIkF,SAAS,GAAG,IAAKzC,CAAAA,GAAL,EAAhB,CAAA;AACA,MAAA,IAAI0C,YAAY,GAAG,IAAA,CAAKR,cAAL,CAAoBO,SAApB,CAAnB,CAAA;AACA1E,MAAAA,YAAA,CAAkBuE,WAAlB,EAA+BI,YAA/B,CAAA,CAAA;AACA,MAAA,IAAA,CAAKd,IAAL,CAAUrB,IAAV,CAAehG,GAAf,CAAA,CAAA;AACA,MAAA,IAAA,CAAKsH,MAAL,CAAYtB,IAAZ,CAAiBhD,KAAjB,CAAA,CAAA;AACA,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;AACJ,GAAA;;EACDoF,MAAM,CAACpI,GAAD,EAAM;IACR,IAAI+H,WAAW,GAAG,IAAA,CAAKb,cAAL,GAAsB5F,IAAI,CAACC,SAAL,CAAevB,GAAf,CAAxC,CAAA;AACA,IAAA,IAAIgI,QAAQ,GAAGxE,WAAA,CAAiBuE,WAAjB,CAAf,CAAA;;AACA,IAAA,IAAIC,QAAJ,EAAc;AACV,MAAA,IAAI,IAAKvC,CAAAA,GAAL,EAAc,IAAA,CAAlB,EAAqB;AACjB;AACA;QACAjC,aAAA,CAAmBuE,WAAnB,CAAA,CAAA;AACH,OAJD,MAKK;AACD;AACA;QACA,IAAI5B,OAAO,GAAG,IAAA,CAAKkB,IAAL,CAAU1B,GAAV,CAAc,IAAKF,CAAAA,GAAL,EAAa,GAAA,CAA3B,CAAd,CAAA;;QACA,IAAI,CAACU,OAAL,EAAc;AACV,UAAA,MAAM,IAAInC,KAAJ,CAAUiB,sBAAV,CAAN,CAAA;AACH,SAAA;;AACDzB,QAAAA,aAAA,CAAmBuE,WAAnB,EAPC;AASD;;QACA,IAAI5B,OAAO,IAAInG,GAAf,EAAoB;UAChB,IAAIqI,aAAa,GAAG,IAAA,CAAKnB,cAAL,GAAsB5F,IAAI,CAACC,SAAL,CAAe4E,OAAf,CAA1C,CAAA;AACA3C,UAAAA,YAAA,CAAkB6E,aAAlB,EAAiCL,QAAjC,CAAA,CAAA;AACH,SAAA;AACJ,OAAA;;AACD,MAAA,IAAI5C,KAAK,GAAG,IAAA,CAAKwC,gBAAL,CAAsBI,QAAtB,CAAZ,CAAA;AACA,MAAA,IAAA,CAAKX,IAAL,CAAUxB,UAAV,CAAqBT,KAArB,CAAA,CAAA;AACA,MAAA,OAAO,KAAKkC,MAAL,CAAYzB,UAAZ,CAAuBT,KAAvB,CAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACDsB,EAAAA,KAAK,GAAG;AACJ,IAAA,KAAK,IAAI1G,GAAT,IAAgB,IAAA,CAAKqH,IAArB,EAA2B;MACvB,IAAIU,WAAW,GAAG,IAAA,CAAKb,cAAL,GAAsB5F,IAAI,CAACC,SAAL,CAAevB,GAAf,CAAxC,CAAA;MACAwD,aAAA,CAAmBuE,WAAnB,CAAA,CAAA;AACH,KAAA;;IACD,IAAKV,CAAAA,IAAL,CAAUX,KAAV,EAAA,CAAA;IACA,IAAKY,CAAAA,MAAL,CAAYZ,KAAZ,EAAA,CAAA;AACH,GAAA;;AACDC,EAAAA,OAAO,GAAG;IACN,IAAIpG,GAAG,GAAG,EAAV,CAAA;;AACA,IAAA,KAAK,IAAIqG,CAAT,IAAc,IAAd,EAAoB;MAChBrG,GAAG,CAACyF,IAAJ,CAASY,CAAT,CAAA,CAAA;AACH,KAAA;;AACD,IAAA,OAAOrG,GAAP,CAAA;AACH,GAAA;;EACe,CAAfgG,MAAM,CAACC,QAAQ,CAAI,GAAA;AAChB,IAAA,OAAO,IAAI8B,oBAAJ,CAAyB,IAAzB,CAAP,CAAA;AACH,GAAA;;EACDjC,MAAM,CAACkC,GAAD,EAAM;IACR,KAAK,IAAI,CAACC,CAAD,EAAI5B,CAAJ,CAAT,IAAmB2B,GAAnB,EAAwB;AACpB,MAAA,IAAA,CAAKN,GAAL,CAASO,CAAT,EAAY5B,CAAZ,CAAA,CAAA;AACH,KAAA;AACJ,GAAA;;AACDnG,EAAAA,SAAS,GAAG;AACR,IAAA,OAAOa,IAAI,CAACC,SAAL,CAAe,IAAf,CAAP,CAAA;AACH,GA9HqB;;;EAgIJ,OAAX+B,WAAW,CAAC+B,IAAD,EAAO;IACrB,IAAIlE,GAAG,GAAG,IAAI8F,YAAJ,CAAiB5B,IAAI,CAACF,MAAtB,CAAV,CADqB;;AAGrBhE,IAAAA,GAAG,CAACuD,MAAJ,GAAaW,IAAI,CAACX,MAAlB,CAHqB;;IAKrBvD,GAAG,CAACkG,IAAJ,GAAW,IAAI7B,MAAJ,CAAWH,IAAI,CAACF,MAAL,GAAc,GAAzB,CAAX,CAAA;IACAhE,GAAG,CAACkG,IAAJ,CAAS3C,MAAT,GAAkBW,IAAI,CAACgC,IAAL,CAAU3C,MAA5B,CANqB;;IAQrBvD,GAAG,CAACmG,MAAJ,GAAa,IAAI9B,MAAJ,CAAWH,IAAI,CAACF,MAAL,GAAc,GAAzB,CAAb,CAAA;IACAhE,GAAG,CAACmG,MAAJ,CAAW5C,MAAX,GAAoBW,IAAI,CAACiC,MAAL,CAAY5C,MAAhC,CAAA;AACA,IAAA,OAAOvD,GAAP,CAAA;AACH,GAAA;;AA3IqB,CAAA;;AA6I1B,MAAMmH,oBAAN,CAA2B;EACvBvE,WAAW,CAAC0E,YAAD,EAAe;IACtB,IAAKpB,CAAAA,IAAL,GAAY,IAAIZ,cAAJ,CAAmBgC,YAAY,CAACpB,IAAhC,CAAZ,CAAA;IACA,IAAKC,CAAAA,MAAL,GAAc,IAAIb,cAAJ,CAAmBgC,YAAY,CAACnB,MAAhC,CAAd,CAAA;AACH,GAAA;;AACDP,EAAAA,IAAI,GAAG;AACH,IAAA,IAAI/G,GAAG,GAAG,IAAA,CAAKqH,IAAL,CAAUN,IAAV,EAAV,CAAA;AACA,IAAA,IAAI/D,KAAK,GAAG,IAAA,CAAKsE,MAAL,CAAYP,IAAZ,EAAZ,CAAA;;AACA,IAAA,IAAI/G,GAAG,CAACgH,IAAJ,IAAYhE,KAAK,CAACgE,IAAtB,EAA4B;AACxB,MAAA,MAAM,IAAIhD,KAAJ,CAAUiB,sBAAV,CAAN,CAAA;AACH,KAAA;;IACD,OAAO;MAAEjC,KAAK,EAAE,CAAChD,GAAG,CAACgD,KAAL,EAAYA,KAAK,CAACA,KAAlB,CAAT;MAAmCgE,IAAI,EAAEhH,GAAG,CAACgH,IAAAA;KAApD,CAAA;AACH,GAAA;;AAZsB;;AC/I3B;AACA;AACA;AACA;;AACA,IAAY0B,UAAZ,CAAA;AAOA;AACA;AACA;;WATYA;AAAAA,EAAAA,WAAAA;AAAAA,EAAAA,WAAAA;AAAAA,EAAAA,WAAAA;AAAAA,EAAAA,WAAAA;AAAAA,CAAAA,EAAAA,eAAAA;;AAUZ,IAAYC,QAAZ,CAAA;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;WAjBYA;AAAAA,EAAAA,SAAAA;AAAAA,EAAAA,SAAAA;AAAAA,EAAAA,SAAAA;AAAAA,CAAAA,EAAAA,aAAAA;;AAkBL,MAAMC,gBAAN,CAAuB;AAM5B;AACF;AACA;AACA;AACA;AACA;AACA;AACE7E,EAAAA,WAAW,CACF8E,KADE,EAEFC,WAFE,EAGFC,QAHE,EAIFC,QAJE,EAKFC,WALE,EAMFC,SANE,EAOFC,EAPE,EAQFC,OARE,EAST;IAAA,IAROP,CAAAA,KAQP,GAROA,KAQP,CAAA;IAAA,IAPOC,CAAAA,WAOP,GAPOA,WAOP,CAAA;IAAA,IANOC,CAAAA,QAMP,GANOA,QAMP,CAAA;IAAA,IALOC,CAAAA,QAKP,GALOA,QAKP,CAAA;IAAA,IAJOC,CAAAA,WAIP,GAJOA,WAIP,CAAA;IAAA,IAHOC,CAAAA,SAGP,GAHOA,SAGP,CAAA;IAAA,IAFOC,CAAAA,EAEP,GAFOA,EAEP,CAAA;IAAA,IADOC,CAAAA,OACP,GADOA,OACP,CAAA;AACA,IAAA,IAAA,CAAKC,KAAL,GAAa,IAAIpC,YAAJ,CAAiB,GAAjB,CAAb,CAAA;AACA,IAAA,IAAA,CAAKoC,KAAL,CAAWpB,GAAX,CAAegB,WAAf,EAA4B,IAA5B,CAAA,CAAA;IACA,IAAKK,CAAAA,SAAL,GAAiB,CAAjB,CAAA;IACA,IAAKC,CAAAA,MAAL,GAAc,EAAd,CAAA;AACA,IAAA,IAAA,CAAKC,MAAL,GAAcb,QAAQ,CAACc,QAAvB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;EACEC,UAAU,CAACC,KAAD,EAAsB;AAC9B,IAAA,IAAI,CAAC,IAAA,CAAKN,KAAL,CAAW1D,GAAX,CAAegE,KAAf,CAAyB,IAAA,KAA1B,KAAoC,IAAA,CAAKV,WAAL,IAAoBU,KAA5D,EAAmE;AACjE,MAAA,IAAA,CAAKN,KAAL,CAAWpB,GAAX,CAAe0B,KAAf,EAAsB,KAAtB,CAAA,CAAA;MACA,IAAKL,CAAAA,SAAL,IAAkB,CAAlB,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;;;EACEM,wBAAwB,CAACD,KAAD,EAAsB;IAC5C,IAAI,IAAA,CAAKV,WAAL,IAAoBU,KAApB,IAA6B,IAAKH,CAAAA,MAAL,IAAeb,QAAQ,CAAC3B,IAAzD,EAA+D;MAC7D,IAAKuC,CAAAA,MAAL,GAAcI,KAAd,CAAA;AACA,MAAA,IAAA,CAAKH,MAAL,GAAcb,QAAQ,CAACkB,SAAvB,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;;;EACEC,kBAAkB,CAACH,KAAD,EAAsB;IACtC,IAAI,IAAA,CAAKV,WAAL,IAAoBU,KAApB,IAA6B,IAAKH,CAAAA,MAAL,IAAeb,QAAQ,CAAC3B,IAAzD,EAA+D;AAC7D,MAAA,IAAA,CAAKwC,MAAL,GAAcb,QAAQ,CAAC3B,IAAvB,CAAA;AACD,KAAA;AACF,GAAA;;AAEU,EAAA,OAAJ+C,IAAI,CAAC;IACVZ,EADU;IAEVF,WAFU;IAGVJ,KAHU;IAIVK,SAJU;IAKVH,QALU;IAMVM,KANU;IAOVC,SAPU;IAQVC,MARU;IASVC,MATU;IAUVR,QAVU;IAWVF,WAXU;AAYVM,IAAAA,OAAAA;AAZU,GAAD,EAa4B;IACrC,MAAMY,SAAS,GAAG,IAAIpB,gBAAJ,CAChBC,KADgB,EAEhBC,WAFgB,EAGhBC,QAHgB,EAIhBC,QAJgB,EAKhBC,WALgB,EAMhBC,SANgB,EAOhBC,EAPgB,EAQhBC,OARgB,CAAlB,CAAA;AAWAY,IAAAA,SAAS,CAACX,KAAV,GAAkB,IAAIpC,YAAJ,CAAiB,GAAjB,CAAlB,CAAA;IACA+C,SAAS,CAACV,SAAV,GAAsBA,SAAtB,CAAA;IACAU,SAAS,CAACT,MAAV,GAAmBA,MAAnB,CAAA;IACAS,SAAS,CAACR,MAAV,GAAmBA,MAAnB,CAAA;AAEAhG,IAAAA,GAAA,CAAS,eAAT,EAA0B6F,KAA1B,CAAA,CAAA;AAEA,IAAA,OAAOW,SAAP,CAAA;AACD,GAAA;;AA/F2B;;;ACtB9B,MAAMC,sBAA8B,GAAG,GAAvC,CAAA;AACA,MAAMC,cAAsB,GAAG,CAA/B,CAAA;;AAEAC,MAAM,CAACtJ,SAAP,CAAiB,QAAjB,IAA6B,YAAY;EACvC,OAAO,IAAA,CAAKuJ,QAAL,EAAP,CAAA;AACD,CAFD;;;AAMaC,IAAAA,QAAb,GADClK,WACD,CAAA,MAAA,IAAA,OAAA,GADA,MACakK,QADb,SAC8BhH,YAD9B,CAC2C;AACjCiH,EAAAA,UAAU,GAAW,IAAI9E,MAAJ,CAAW,WAAX,CAAX,CAAA;AACV+E,EAAAA,cAAc,GAAiB,IAAItD,YAAJ,CAAiB,OAAjB,CAAjB,CAAA;;AAEtBlD,EAAAA,WAAW,GAAG;AACZ;AACA,IAAA,KAAA,EAAA,CAAA;AACD,GAAA;;AAEDH,EAAAA,OAAO,GAAG;IACR,OAAO,IAAIyG,QAAJ,EAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AAGEG,EAAAA,eAAe,CAAC;IACd3B,KADc;IAEdC,WAFc;IAGdC,QAHc;AAIdC,IAAAA,QAAAA;AAJc,GAAD,EAUN;IACPnE,MAAM,CAACgE,KAAK,CAACnE,MAAN,GAAe,CAAhB,EAAmB,uBAAnB,CAAN,CAAA;AACAG,IAAAA,MAAM,CACJiE,WAAW,CAACpE,MAAZ,GAAqB,CAArB,IAA0BoE,WAAW,CAACpE,MAAZ,GAAqBuF,sBAD3C,EAEJ,+BAFI,CAAN,CAFO;;AAQP,IAAA,MAAMjK,GAAG,GAAI,CAAA,EAAEwD,eAAA,EAAuB,CAAtC,CAAA,CAAA,CAAA;AACA,IAAA,IAAIiH,kBAAkB,GAAG,CAAzB,CATO;;IAYP,IAAI,IAAA,CAAKF,cAAL,CAAoBlD,IAApB,CAAyBV,OAAzB,EAAA,CAAmC+D,QAAnC,CAA4C1K,GAA5C,CAAJ,EAAsD;AACpD;MACA6E,MAAM,CACJ,IAAK0F,CAAAA,cAAL,CAAoB5E,GAApB,CAAwB3F,GAAxB,CAAgCkK,IAAAA,cAD5B,EAEJ,6CAFI,CAAN,CAAA;AAIAO,MAAAA,kBAAkB,GAAG,IAAKF,CAAAA,cAAL,CAAoB5E,GAApB,CAAwB3F,GAAxB,CAArB,CAAA;AACD,KAAA;;IAED,IAAKsK,CAAAA,UAAL,CAAgBtE,IAAhB,CACE,IAAI4C,gBAAJ,CACEC,KADF,EAEEC,WAFF,EAGEC,QAHF,EAIEC,QAJF,EAKExF,eAAA,EAAyB,GAAA,IAAA,CAAK8G,UAAL,CAAgB7E,GAAhB,EAL3B,EAMEkF,MAAM,CAACnH,cAAA,EAAD,CANR,EAOE,IAAK8G,CAAAA,UAAL,CAAgB5F,MAPlB,EAQEyF,MAAM,CAACQ,MAAM,CAACnH,eAAA,EAAD,CAAP,CARR,CADF,CAAA,CAAA;IAaA,IAAK+G,CAAAA,cAAL,CAAoBtC,GAApB,CAAwBjI,GAAxB,EAA6ByK,kBAAkB,GAAG,CAAlD,CAAA,CAAA;AACD,GAAA;;AAGDG,EAAAA,aAAa,CAAC;AAAEzB,IAAAA,EAAAA;AAAF,GAAD,EAA2C;AACtDtE,IAAAA,MAAM,CAACsE,EAAE,IAAI,CAAP,EAAU,uCAAV,CAAN,CAAA;IACAtE,MAAM,CAACsE,EAAE,GAAG,IAAKmB,CAAAA,UAAL,CAAgB7E,GAAhB,EAAN,EAA6B,6BAA7B,CAAN,CAAA;IAEA,MAAMoF,QAAQ,GAAG,IAAKP,CAAAA,UAAL,CAAgB3E,GAAhB,CAAoBwD,EAApB,CAAjB,CAAA;AACA3F,IAAAA,GAAA,CAAS,qBAAT,EAAgCqH,QAAhC,CAAA,CAAA;AACA,IAAA,MAAMb,SAAS,GAAGpB,gBAAgB,CAACmB,IAAjB,CAChB,IAAKO,CAAAA,UAAL,CAAgB3E,GAAhB,CAAoBwD,EAApB,CADgB,CAAlB,CAAA;IAGA,MAAMnJ,GAAG,GAAI,CAAA,EAAEwD,eAAA,EAAuB,CAAE2F,EAAAA,EAAG,CAA3C,CAAA,CATsD;;IAYtDtE,MAAM,CACJmF,SAAS,CAACR,MAAV,IAAoBb,QAAQ,CAAC3B,IADzB,EAEJ,qCAFI,CAAN,CAAA;AAKAgD,IAAAA,SAAS,CAACZ,OAAV,IAAqBe,MAAM,CAACQ,MAAM,CAACnH,eAAA,EAAD,CAAP,CAA3B,CAAA;IACAwG,SAAS,CAACV,SAAV,IAAuB,CAAvB,CAAA;AACAU,IAAAA,SAAS,CAACX,KAAV,CAAgBpB,GAAhB,CAAoBjI,GAApB,EAAyB,IAAzB,CAAA,CAAA;AACA,IAAA,IAAA,CAAKsK,UAAL,CAAgBlE,OAAhB,CAAwB+C,EAAxB,EAA4Ba,SAA5B,CAAA,CAAA;AAEA,IAAA,OAAOA,SAAP,CAAA;AACD,GAAA;;AAGDN,EAAAA,UAAU,CAAC;AAAEP,IAAAA,EAAAA;AAAF,GAAD,EAA2C;AACnDtE,IAAAA,MAAM,CAACsE,EAAE,IAAI,CAAP,EAAU,uCAAV,CAAN,CAAA;IACAtE,MAAM,CAAC,CAAC,IAAKyF,CAAAA,UAAL,CAAgB5E,OAAhB,EAAF,EAA6B,+BAA7B,CAAN,CAAA;IACAb,MAAM,CAACsE,EAAE,IAAI,IAAKmB,CAAAA,UAAL,CAAgB7E,GAAhB,EAAwB,GAAA,CAA/B,EAAkC,6BAAlC,CAAN,CAAA;IAEA,MAAMuE,SAAS,GAAG,IAAKM,CAAAA,UAAL,CAAgB3E,GAAhB,CAAoBwD,EAApB,CAAlB,CAAA;IACA,MAAMnJ,GAAG,GAAI,CAAEwD,EAAAA,eAAA,EAAuB,CAAE2F,EAAAA,EAAG,CAA3C,CAAA,CAAA;IAEAtE,MAAM,CACJmF,SAAS,CAACf,WAAV,KAA0BjJ,GADtB,EAEJ,wCAFI,CAAN,CAAA;AAIA6E,IAAAA,MAAM,CACJmF,SAAS,CAACX,KAAV,CAAgBhC,IAAhB,CAAqBV,OAArB,EAAA,CAA+B+D,QAA/B,CAAwC1K,GAAxC,CADI,EAEJ,kCAFI,CAAN,CAAA;IAIA6E,MAAM,CACJmF,SAAS,CAACR,MAAV,KAAqBb,QAAQ,CAAC3B,IAD1B,EAEJ,qCAFI,CAAN,CAAA;IAKAgD,SAAS,CAACV,SAAV,IAAuB,CAAvB,CAAA;AACAU,IAAAA,SAAS,CAACX,KAAV,CAAgBjB,MAAhB,CAAuBpI,GAAvB,CAAA,CAAA;AACA,IAAA,IAAA,CAAKsK,UAAL,CAAgBlE,OAAhB,CAAwB+C,EAAxB,EAA4Ba,SAA5B,CAAA,CAAA;AAEA,IAAA,OAAOA,SAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAQEc,EAAAA,aAAa,CAAC;AAAE3B,IAAAA,EAAAA;AAAF,GAAD,EAA2C;AACtDtE,IAAAA,MAAM,CAACsE,EAAE,IAAI,CAAP,EAAU,uCAAV,CAAN,CAAA;IACAtE,MAAM,CAAC,CAAC,IAAKyF,CAAAA,UAAL,CAAgB5E,OAAhB,EAAF,EAA6B,+BAA7B,CAAN,CAAA;IACAb,MAAM,CAACsE,EAAE,GAAG,IAAKmB,CAAAA,UAAL,CAAgB7E,GAAhB,EAAN,EAA6B,6BAA7B,CAAN,CAAA;IAEA,MAAMuE,SAAS,GAAG,IAAKM,CAAAA,UAAL,CAAgB3E,GAAhB,CAAoBwD,EAApB,CAAlB,CAAA;IACA,MAAMnJ,GAAG,GAAI,CAAEwD,EAAAA,eAAA,EAAuB,CAAE2F,EAAAA,EAAG,CAA3C,CAAA,CAAA;IAEAtE,MAAM,CAACmF,SAAS,CAACT,MAAV,KAAqB,EAAtB,EAA0B,iCAA1B,CAAN,CAAA;IACA1E,MAAM,CACJmF,SAAS,CAACR,MAAV,KAAqBb,QAAQ,CAAC3B,IAD1B,EAEJ,qCAFI,CAAN,CAAA;IAIAnC,MAAM,CACJmF,SAAS,CAACf,WAAV,KAA0BjJ,GADtB,EAEJ,qCAFI,CAAN,CAAA;IAKA,IAAKsK,CAAAA,UAAL,CAAgBlE,OAAhB,CAAwB+C,EAAxB,EAA4B,EAC1B,GAAGa,SADuB;MAE1BR,MAAM,EAAEb,QAAQ,CAACkB,SAFS;MAG1BN,MAAM,EAAE/F,eAAA,EAAA;KAHV,CAAA,CAAA;AAMA,IAAA,OAAOwG,SAAP,CAAA;AACD,GAAA;;AAGDe,EAAAA,eAAe,CAAC;AAAE5B,IAAAA,EAAAA;AAAF,GAAD,EAA2C;IACxD,MAAMa,SAAS,GAAG,IAAKM,CAAAA,UAAL,CAAgB3E,GAAhB,CAAoBwD,EAApB,CAAlB,CAAA;IACA,MAAMnJ,GAAG,GAAI,CAAEwD,EAAAA,eAAA,EAAuB,CAAE2F,EAAAA,EAAG,CAA3C,CAAA,CAAA;IAEAtE,MAAM,CACJ7E,GAAG,KAAKgK,SAAS,CAACf,WADd,EAEJ,4DAFI,CAAN,CAAA;IAIApE,MAAM,CAACmF,SAAS,CAACT,MAAV,CAAiB7E,MAAjB,GAA0B,CAA3B,EAA8B,mCAA9B,CAAN,CAAA;IACAG,MAAM,CACJmF,SAAS,CAACR,MAAV,KAAqBb,QAAQ,CAAC3B,IAD1B,EAEJ,qCAFI,CAAN,CAAA;IAKA,IAAKsD,CAAAA,UAAL,CAAgBlE,OAAhB,CAAwB+C,EAAxB,EAA4B,EAAE,GAAGa,SAAL;MAAgBR,MAAM,EAAEb,QAAQ,CAAC3B,IAAAA;KAA7D,CAAA,CAAA;IAEA,MAAMgE,eAAe,GAAGxH,kBAAA,CAAwBwG,SAAS,CAACT,MAAlC,CAAxB,CAAA;AACA/F,IAAAA,0BAAA,CAAgCwH,eAAhC,EAAiDhB,SAAS,CAACZ,OAA3D,CAAA,CAAA;IACA5F,aAAA,CAAmBwH,eAAnB,CAAA,CAAA;AAEA,IAAA,OAAOhB,SAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AAGEiB,EAAAA,aAAa,GAA4B;AACvC,IAAA,OAAO,IAAKX,CAAAA,UAAL,CAAgB3D,OAAhB,EAAP,CAAA;AACD,GAAA;;EAGDuE,gBAAgB,CAAC/B,EAAD,EAA+B;IAC7CtE,MAAM,CAAC,KAAKyF,UAAL,CAAgB5F,MAAhB,GAAyB,CAA1B,EAA6B,kCAA7B,CAAN,CAAA;AACAG,IAAAA,MAAM,CAACsE,EAAE,IAAI,CAAP,EAAU,uCAAV,CAAN,CAAA;IACAtE,MAAM,CAACsE,EAAE,IAAI,IAAKmB,CAAAA,UAAL,CAAgB5F,MAAhB,GAAyB,CAAhC,EAAmC,6BAAnC,CAAN,CAAA;AAEA,IAAA,OAAO,KAAK4F,UAAL,CAAgB3E,GAAhB,CAAoBwD,EAApB,CAAP,CAAA;AACD,GAAA;;AAGDgC,EAAAA,cAAc,GAAW;AACvB,IAAA,OAAO,IAAKb,CAAAA,UAAL,CAAgB7E,GAAhB,EAAP,CAAA;AACD,GAAA;;AAGD2F,EAAAA,qBAAqB,GAAW;AAC9B,IAAA,MAAMpL,GAAG,GAAGwD,eAAA,KAAyB,GAArC,CAAA;IAEA,OAAQ,IAAA,CAAK+G,cAAL,CAAoB5E,GAApB,CAAwB3F,GAAxB,CAAD,IAA4C,CAAnD,CAAA;AACD,GAAA;;AA7NwC,CAA3C,oEAiBGF,IAjBH,CAAA,EAAA,MAAA,CAAA,wBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,iBAAA,CAAA,EAAA,OAAA,CAAA,SAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,eAAA,EAAA,CAiEGA,IAjEH,CAAA,EAAA,MAAA,CAAA,wBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,eAAA,CAAA,EAAA,OAAA,CAAA,SAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,YAAA,EAAA,CA2FGA,IA3FH,CA6IGA,EAAAA,MAAAA,CAAAA,wBAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAAAA,YAAAA,CAAAA,EAAAA,OAAAA,CAAAA,SAAAA,CAAAA,EAAAA,yBAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAAAA,eAAAA,EAAAA,CAAAA,IA7IH,CAyKGA,EAAAA,MAAAA,CAAAA,wBAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAAAA,eAAAA,CAAAA,EAAAA,OAAAA,CAAAA,SAAAA,CAAAA,EAAAA,yBAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAAAA,iBAAAA,EAAAA,CAAAA,IAzKH,6JAqMGI,IArMH,CAAA,EAAA,MAAA,CAAA,wBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,eAAA,CAAA,EAAA,OAAA,CAAA,SAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,kBAAA,EAAA,CA0MGA,IA1MH,CAmNGA,EAAAA,MAAAA,CAAAA,wBAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAAAA,kBAAAA,CAAAA,EAAAA,OAAAA,CAAAA,SAAAA,CAAAA,EAAAA,yBAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAAAA,gBAAAA,EAAAA,CAAAA,IAnNH,oKAwNGA,IAxNH,CAAA,EAAA,MAAA,CAAA,wBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,uBAAA,CAAA,EAAA,OAAA,CAAA,SAAA,CAAA,GAAA,OAAA,CAAA,CAAA,IAAA,OAAA;;EAAamK;;;kBAAAA;;;;;;;;;;kBAAAA;;;;;;;;;;kBAAAA;;;;;;;;;;kBAAAA;;;;;;;;;;kBAAAA;;;;;;;;;;;;;kBAAAA;;;;;;;;;;;;;kBAAAA;;;;;;;;;;;;;kBAAAA;;;;;;;;;;;;;kBAAAA;;;;;;;;;;;;;;;"}